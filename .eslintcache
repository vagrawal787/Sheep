[{"/Users/varun/Documents/Developer/sheep/src/index.js":"1","/Users/varun/Documents/Developer/sheep/src/reportWebVitals.js":"2","/Users/varun/Documents/Developer/sheep/src/App.js":"3","/Users/varun/Documents/Developer/sheep/src/containers/LandingFormContainer.jsx":"4","/Users/varun/Documents/Developer/sheep/src/components/Input.jsx":"5","/Users/varun/Documents/Developer/sheep/src/components/Button.jsx":"6","/Users/varun/Documents/Developer/sheep/src/pages/landingForm.jsx":"7","/Users/varun/Documents/Developer/sheep/src/pages/userForm.jsx":"8","/Users/varun/Documents/Developer/sheep/src/pages/404.jsx":"9","/Users/varun/Documents/Developer/sheep/src/graphql/queries.js":"10","/Users/varun/Documents/Developer/sheep/src/aws-exports.js":"11","/Users/varun/Documents/Developer/sheep/src/pages/thankPage.jsx":"12","/Users/varun/Documents/Developer/sheep/src/graphql/mutations.js":"13","/Users/varun/Documents/Developer/sheep/src/pages/adminConsole.jsx":"14","/Users/varun/Documents/Developer/sheep/src/pages/formCreator.jsx":"15","/Users/varun/Documents/Developer/sheep/src/pages/thankYouForm.jsx":"16","/Users/varun/Documents/Developer/sheep/src/pages/responseManager.jsx":"17","/Users/varun/Documents/Developer/sheep/src/pages/formEditor.jsx":"18"},{"size":500,"mtime":1607329823099,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1607329823100,"results":"21","hashOfConfig":"20"},{"size":1941,"mtime":1609308402350,"results":"22","hashOfConfig":"20"},{"size":3730,"mtime":1609652960390,"results":"23","hashOfConfig":"20"},{"size":516,"mtime":1609571310623,"results":"24","hashOfConfig":"20"},{"size":335,"mtime":1609630133638,"results":"25","hashOfConfig":"20"},{"size":386,"mtime":1609652408845,"results":"26","hashOfConfig":"20"},{"size":9438,"mtime":1609654876113,"results":"27","hashOfConfig":"20"},{"size":178,"mtime":1607496802031,"results":"28","hashOfConfig":"20"},{"size":2518,"mtime":1609049332026,"results":"29","hashOfConfig":"20"},{"size":734,"mtime":1609049334476,"results":"30","hashOfConfig":"20"},{"size":1123,"mtime":1609650963125,"results":"31","hashOfConfig":"20"},{"size":4276,"mtime":1609049332142,"results":"32","hashOfConfig":"20"},{"size":5424,"mtime":1609309179904,"results":"33","hashOfConfig":"20"},{"size":7350,"mtime":1609307007014,"results":"34","hashOfConfig":"20"},{"size":1243,"mtime":1609223000272,"results":"35","hashOfConfig":"20"},{"size":1348,"mtime":1609311668766,"results":"36","hashOfConfig":"20"},{"size":8333,"mtime":1609310219676,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1f11qpv",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},"/Users/varun/Documents/Developer/sheep/src/index.js",[],["81","82"],"/Users/varun/Documents/Developer/sheep/src/reportWebVitals.js",[],"/Users/varun/Documents/Developer/sheep/src/App.js",[],"/Users/varun/Documents/Developer/sheep/src/containers/LandingFormContainer.jsx",["83","84","85","86","87","88","89"],"/Users/varun/Documents/Developer/sheep/src/components/Input.jsx",[],"/Users/varun/Documents/Developer/sheep/src/components/Button.jsx",["90"],"import React from 'react';\nimport \"./button.css\"\n\nconst Button = (props) => {\n\tconsole.log(props.style);\n\treturn (\n\t\t<button\n\t\t\tname={props.label}\n\t\t\tstyle={props.style}\n\t\t\tclassName={props.type == 'primary' ? 'btn btn-primary' : 'btn btn-secondary'}\n\t\t\tonClick={props.action} >\n\t\t\t{props.title}\n\t\t</button>)\n}\n\n\nexport default Button;","/Users/varun/Documents/Developer/sheep/src/pages/landingForm.jsx",[],"/Users/varun/Documents/Developer/sheep/src/pages/userForm.jsx",["91","92","93","94","95","96","97","98","99"],"/Users/varun/Documents/Developer/sheep/src/pages/404.jsx",[],"/Users/varun/Documents/Developer/sheep/src/graphql/queries.js",[],"/Users/varun/Documents/Developer/sheep/src/aws-exports.js",[],"/Users/varun/Documents/Developer/sheep/src/pages/thankPage.jsx",["100","101","102","103","104","105"],"/Users/varun/Documents/Developer/sheep/src/graphql/mutations.js",[],"/Users/varun/Documents/Developer/sheep/src/pages/adminConsole.jsx",["106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124"],"import React, { Component } from 'react';\nimport Button from '../components/Button';\nimport Amplify, { Auth } from 'aws-amplify';\nimport awsconfig from '../aws-exports';\n\nimport { API } from 'aws-amplify';\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport gql from 'graphql-tag';\n\nimport CreatePage from '../pages/formCreator';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\n\nimport * as queries from '../graphql/queries';\nimport * as mutations from '../graphql/mutations';\n\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom';\n\n\nclass ConsolePage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userID: '',\n            message: '',\n            call: false,\n            redirect: false,\n            apicall: false,\n            forms: [],\n            buttons: [],\n            rendering: false,\n            redirectToManager: false,\n            formToRedirect: '',\n        }\n        this.handleButtonPress = this.handleButtonPress.bind(this);\n        this.handleManagerPress = this.handleManagerPress.bind(this);\n        this.setMessage = this.setMessage.bind(this);\n        this.getUserID = this.getUserID.bind(this);\n        this.setButtons = this.setButtons.bind(this);\n    }\n\n    handleButtonPress(e) {\n        e.preventDefault();\n        this.setState({ redirect: true });\n    }\n\n    handleManagerPress(e) {\n        e.preventDefault();\n        let name = e.target.name;\n        console.log(name);\n        this.state.formToRedirect = name;\n        this.setState({ redirectToManager: true });\n    }\n\n\n    setMessage() {\n        this.state.message = '';\n    }\n\n    /* Retrieves the current userID. \n    Fetches their forms from the API. \n    Changes button state so that user can select which of their forms to manage.*/\n    async getUserID() {\n        const user = await Auth.currentUserInfo();\n        console.log(user.username);\n        this.state.call = true;\n        this.setState({ userID: user.username });\n        const client = new AWSAppSyncClient({\n            url: awsconfig.aws_appsync_graphqlEndpoint,\n            region: awsconfig.aws_appsync_region,\n            disableOffline: true,\n            auth: {\n                type: AUTH_TYPE.API_KEY,\n                apiKey: awsconfig.aws_appsync_apiKey,\n            },\n        });\n        console.log(\"fetching api data\");\n        let apiData = '';\n        try {\n            apiData = await client.query({\n                query: gql(queries.getUsers),\n                variables: { id: this.state.userID }\n            });\n            console.log(\"api data fetched\");\n            console.log(apiData);\n        } catch (e) {\n            console.log(e);\n        }\n        if (apiData == '' || apiData.data.getUsers == null) {\n            try {\n                const mutData = await client.mutate({\n                    mutation: gql(mutations.createUsers),\n                    variables: { input: { id: this.state.userID } }\n                });\n            } catch (e) {\n                console.log(e);\n            }\n            console.log('normal retrieval');\n        } else {\n            var dict = apiData.data.getUsers.forms.items;\n            var arr = [];\n            for (var key in dict) {\n                arr.push((dict[key]).id);\n            }\n            this.state.forms = arr;\n            console.log(this.state.forms);\n        }\n        (() => { this.setButtons(); })();\n    }\n\n    setButtons() {\n        var arr = [];\n        for (var p in this.state.forms) {\n            var button = <Button\n                action={this.handleManagerPress}\n                type={'primary'}\n                label={this.state.forms[p]}\n                title={this.state.forms[p]}\n            />\n            arr.push(button);\n        }\n        console.log(arr);\n        this.setState({ buttons: arr });\n    }\n\n    render() {\n        if (!this.state.call) {\n            console.log(\"calling admin api\");\n            (async () => { this.getUserID(); })();\n        }\n        // if (!this.state.rendering){\n        //     (() => { this.setButtons(); })();\n        // }\n        if (this.state.redirect) {\n            this.state.redirect = false;\n            this.state.call = false;\n            this.state.redirectToManager = false;\n            console.log(\"redirecting from admin\");\n            return <Redirect to={{\n                pathname: \"/createForm\",\n                state: { userID: this.state.userID }\n            }} />\n        }\n        if (this.state.redirectToManager) {\n            this.state.redirect = false;\n            this.state.call = false;\n            this.state.redirectToManager = false;\n            console.log(\"redirecting to responses\");\n            return <Redirect to={{\n                pathname: \"/responseManager\",\n                state: {\n                    formID: this.state.formToRedirect,\n                    userID: this.state.userID\n                }\n            }} />\n        }\n        return (\n            <div>\n                <AmplifySignOut />\n                <h1> Welcome to Admin Console! </h1>\n                {this.state.buttons}\n                <Button\n                    action={this.handleButtonPress}\n                    type={'primary'}\n                    title={'Create Game'}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withAuthenticator(ConsolePage);","/Users/varun/Documents/Developer/sheep/src/pages/formCreator.jsx",["125","126","127","128","129","130","131","132"],"import React, { Component } from 'react';\n\nimport * as mutations from '../graphql/mutations';\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport awsconfig from '../aws-exports';\nimport gql from 'graphql-tag';\n\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom';\n\nimport Input from '../components/Input';\nimport Button from '../components/Button';\n\n\nclass CreatePage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userID: this.props.location.state.userID,\n            id: '',\n            q1: '',\n            q2: '',\n            q3: '',\n            q4: '',\n            q5: '',\n            q6: '',\n            q7: '',\n            q8: '',\n            q9: '',\n            q10: '',\n            redirect: false,\n            error: '',\n        }\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleInput(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState({ [name]: value });\n    }\n\n    async handleFormSubmit(e) {\n        e.preventDefault();\n        let nullVal = false;\n        let elements = [this.state.id, this.state.q1,\n        this.state.q2, this.state.q3,\n        this.state.q4, this.state.q5,\n        this.state.q6, this.state.q7,\n        this.state.q8, this.state.q9, this.state.q10];\n        for (var key in elements) {\n            if (elements[key] == '') {\n                nullVal = true;\n                break;\n            }\n        }\n        if (nullVal == true) {\n            this.setState({error: 'Uh-oh, make sure you have inputted all questions!'});\n        } else {\n            this.state.error = '';\n            const createF = {\n                id: this.state.id,\n                formUserId: this.state.userID,\n                userID: this.state.userID,\n                q1: this.state.q1,\n                q2: this.state.q2,\n                q3: this.state.q3,\n                q4: this.state.q4,\n                q5: this.state.q5,\n                q6: this.state.q6,\n                q7: this.state.q7,\n                q8: this.state.q8,\n                q9: this.state.q9,\n                q10: this.state.q10,\n            }\n            const client = new AWSAppSyncClient({\n                url: awsconfig.aws_appsync_graphqlEndpoint,\n                region: awsconfig.aws_appsync_region,\n                disableOffline: true,\n                auth: {\n                    type: AUTH_TYPE.API_KEY,\n                    apiKey: awsconfig.aws_appsync_apiKey,\n                },\n            });\n            const newGame = await client.mutate({ mutation: gql(mutations.createForm), variables: { input: createF } });\n            this.setState({ redirect: true });\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            this.state.redirect = false;\n            return <Redirect to={{\n                pathname: \"/formCreated\",\n                state: { code: this.state.id }\n            }} />\n        }\n        return (\n            <div>\n                <h1> Create a Game! </h1>\n                <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n\n                    {/* <Input inputType={'text'}\n          title={'Name:'}\n          name={'fname'}\n          value={this.state.fname}\n          placeholder={'First name'}\n          handleChange={this.handleInput}\n\n        />  */}\n\n\n                    <Input inputType={'number'}\n                        title={'ID:'}\n                        name={'id'}\n                        value={this.state.id}\n                        placeholder={'ID'}\n                        handleChange={this.handleInput}\n\n                    /> {/* id */}\n\n                    <Input inputType={'text'}\n                        title={'Question 1:'}\n                        name={'q1'}\n                        value={this.state.q1}\n                        placeholder={'Question 1'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 1 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 2:'}\n                        name={'q2'}\n                        value={this.state.q2}\n                        placeholder={'Question 2'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 2 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 3:'}\n                        name={'q3'}\n                        value={this.state.q3}\n                        placeholder={'Question 3'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 3 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 4:'}\n                        name={'q4'}\n                        value={this.state.q4}\n                        placeholder={'Question 4'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 4 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 5:'}\n                        name={'q5'}\n                        value={this.state.q5}\n                        placeholder={'Question 5'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 5 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 6:'}\n                        name={'q6'}\n                        value={this.state.q6}\n                        placeholder={'Question 6'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 6 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 7:'}\n                        name={'q7'}\n                        value={this.state.q7}\n                        placeholder={'Question 7'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 7 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 8:'}\n                        name={'q8'}\n                        value={this.state.q8}\n                        placeholder={'Question 8'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 8 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 9:'}\n                        name={'q9'}\n                        value={this.state.q9}\n                        placeholder={'Question 9'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 9 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 10:'}\n                        name={'q10'}\n                        value={this.state.q10}\n                        placeholder={'Question 10'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 10 */}\n\n                    <Button\n                        action={this.handleFormSubmit}\n                        type={'primary'}\n                        title={'Submit'}\n                    /> { /*Submit */}\n\n                </form>\n                {this.state.error}\n            </div>\n        );\n    }\n}\n\nexport default CreatePage;","/Users/varun/Documents/Developer/sheep/src/pages/thankYouForm.jsx",["133","134","135","136","137"],"import React, { Component } from 'react';\nimport Button from '../components/Button';\n\nimport {BrowserRouter as Router, Route, Switch, Link, Redirect} from 'react-router-dom';\n\nclass ThankFormCreate extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n        }\n        this.handleButtonPress = this.handleButtonPress.bind(this);\n    }\n\n    handleButtonPress(e) {\n        e.preventDefault();\n        console.log(\"button pressed\");\n        this.setState({ redirect: true });\n    }\n\n    render() {\n        if (this.state.redirect) {\n            this.state.redirect = false;\n            return <Redirect to={{\n                pathname: \"/adminConsole\",\n                state: { refresh: true }\n            }} />\n        }\n        return (\n            <div>\n                <h1>\n                    Thanks for creating a form! Be sure to send this code to your players: {this.props.location.state.code}\n                </h1>\n                <Button\n                    action={this.handleButtonPress}\n                    type={'primary'}\n                    title={'Return to Admin Console'}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ThankFormCreate;","/Users/varun/Documents/Developer/sheep/src/pages/responseManager.jsx",["138","139","140","141","142"],"import React, { Component } from 'react';\nimport Button from '../components/Button';\n\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom';\n\nclass ResponseManager extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.location.state.formID,\n            redirectToEdit: false,\n        }\n        this.handleEditFormButton = this.handleEditFormButton.bind(this);\n    }\n\n    handleEditFormButton(e) {\n        e.preventDefault();\n        this.setState({ redirectToEdit: true });\n    }\n\n    render() {\n        if (this.state.redirectToEdit) {\n            this.state.redirectToEdit = false;\n            return <Redirect to={{\n                pathname: \"/formEditor\",\n                state: {\n                    formID: this.state.id,\n                    userID: this.props.location.state.userID\n                }\n            }} />\n        }\n        return (\n            <div>\n                <h1>\n                    Responses for form: {this.props.location.state.formID}\n                </h1>\n                <Button\n                    action={this.handleEditFormButton}\n                    type={'primary'}\n                    title={'Edit Form'}\n                /> { /*Submit */}\n            </div>\n        );\n    }\n}\n\nexport default ResponseManager;","/Users/varun/Documents/Developer/sheep/src/pages/formEditor.jsx",["143","144","145","146","147","148","149","150"],"import React, { Component } from 'react';\n\nimport * as mutations from '../graphql/mutations';\nimport * as queries from '../graphql/queries';\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport awsconfig from '../aws-exports';\nimport gql from 'graphql-tag';\n\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom';\n\nimport Input from '../components/Input';\nimport Button from '../components/Button';\n\n\nclass EditPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.location.state.formID,\n            userID: this.props.location.state.userID,\n            q1: '',\n            q2: '',\n            q3: '',\n            q4: '',\n            q5: '',\n            q6: '',\n            q7: '',\n            q8: '',\n            q9: '',\n            q10: '',\n            redirect: false,\n            error: '',\n            callQuery: false,\n        }\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleInput(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState({ [name]: value });\n    }\n\n    async findForm() {\n        const client = new AWSAppSyncClient({\n          url: awsconfig.aws_appsync_graphqlEndpoint,\n          region: awsconfig.aws_appsync_region,\n          disableOffline: true,\n          auth: {\n            type: AUTH_TYPE.API_KEY,\n            apiKey: awsconfig.aws_appsync_apiKey,\n          },\n        });\n        const apiData = await client.query({ query: gql(queries.getForm), variables: { id: this.props.location.state.formID } });\n        if (apiData.data.getForm == null) {\n          this.state.callQuery = true;\n          (() => { this.handleError(); })();\n        }\n        else {\n          this.setState({\n            q1: apiData.data.getForm.q1,\n            q2: apiData.data.getForm.q2,\n            q3: apiData.data.getForm.q3,\n            q4: apiData.data.getForm.q4,\n            q5: apiData.data.getForm.q5,\n            q6: apiData.data.getForm.q6,\n            q7: apiData.data.getForm.q7,\n            q8: apiData.data.getForm.q8,\n            q9: apiData.data.getForm.q9,\n            q10: apiData.data.getForm.q10\n          });\n          this.state.callQuery = true;\n        }\n      }\n\n    async handleFormSubmit(e) {\n        e.preventDefault();\n        let nullVal = false;\n        let elements = [this.state.q1,\n        this.state.q2, this.state.q3,\n        this.state.q4, this.state.q5,\n        this.state.q6, this.state.q7,\n        this.state.q8, this.state.q9, this.state.q10];\n        for (var key in elements) {\n            if (elements[key] == '') {\n                nullVal = true;\n                break;\n            }\n        }\n        if (nullVal == true) {\n            this.setState({error: 'Uh-oh, make sure you have inputted all questions!'});\n        } else {\n            this.state.error = '';\n            const createF = {\n                id: this.state.id,\n                formUserId: this.state.userID,\n                userID: this.state.userID,\n                q1: this.state.q1,\n                q2: this.state.q2,\n                q3: this.state.q3,\n                q4: this.state.q4,\n                q5: this.state.q5,\n                q6: this.state.q6,\n                q7: this.state.q7,\n                q8: this.state.q8,\n                q9: this.state.q9,\n                q10: this.state.q10,\n            }\n            const client = new AWSAppSyncClient({\n                url: awsconfig.aws_appsync_graphqlEndpoint,\n                region: awsconfig.aws_appsync_region,\n                disableOffline: true,\n                auth: {\n                    type: AUTH_TYPE.API_KEY,\n                    apiKey: awsconfig.aws_appsync_apiKey,\n                },\n            });\n            const newGame = await client.mutate({ mutation: gql(mutations.updateForm), variables: { input: createF } });\n            this.setState({ redirect: true });\n        }\n    }\n\n    render() {\n        if (!this.state.callQuery) {\n            (async () => { await this.findForm(); })();\n        }\n\n        if (this.state.redirect) {\n            this.state.redirect = false;\n            return <Redirect to={{\n                pathname: \"/adminConsole\"\n            }} />\n        }\n        return (\n            <div>\n                <h1> Edit Your Game: {this.state.id} </h1>\n                <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n\n                    {/* <Input inputType={'text'}\n          title={'Name:'}\n          name={'fname'}\n          value={this.state.fname}\n          placeholder={'First name'}\n          handleChange={this.handleInput}\n\n        />  */}\n\n                    <Input inputType={'text'}\n                        title={'Question 1:'}\n                        name={'q1'}\n                        value={this.state.q1}\n                        placeholder={'Question 1'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 1 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 2:'}\n                        name={'q2'}\n                        value={this.state.q2}\n                        placeholder={'Question 2'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 2 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 3:'}\n                        name={'q3'}\n                        value={this.state.q3}\n                        placeholder={'Question 3'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 3 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 4:'}\n                        name={'q4'}\n                        value={this.state.q4}\n                        placeholder={'Question 4'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 4 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 5:'}\n                        name={'q5'}\n                        value={this.state.q5}\n                        placeholder={'Question 5'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 5 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 6:'}\n                        name={'q6'}\n                        value={this.state.q6}\n                        placeholder={'Question 6'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 6 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 7:'}\n                        name={'q7'}\n                        value={this.state.q7}\n                        placeholder={'Question 7'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 7 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 8:'}\n                        name={'q8'}\n                        value={this.state.q8}\n                        placeholder={'Question 8'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 8 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 9:'}\n                        name={'q9'}\n                        value={this.state.q9}\n                        placeholder={'Question 9'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 9 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 10:'}\n                        name={'q10'}\n                        value={this.state.q10}\n                        placeholder={'Question 10'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 10 */}\n\n                    <Button\n                        action={this.handleFormSubmit}\n                        type={'primary'}\n                        title={'Submit'}\n                    /> { /*Submit */}\n\n                </form>\n                {this.state.error}\n            </div>\n        );\n    }\n}\n\nexport default EditPage;",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":9,"column":27,"nodeType":"157","messageId":"158","endLine":9,"endColumn":33},{"ruleId":"155","severity":1,"message":"159","line":9,"column":35,"nodeType":"157","messageId":"158","endLine":9,"endColumn":40},{"ruleId":"155","severity":1,"message":"160","line":9,"column":42,"nodeType":"157","messageId":"158","endLine":9,"endColumn":48},{"ruleId":"155","severity":1,"message":"161","line":9,"column":50,"nodeType":"157","messageId":"158","endLine":9,"endColumn":54},{"ruleId":"162","severity":1,"message":"163","line":50,"column":25,"nodeType":"164","messageId":"165","endLine":50,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":73,"column":7,"nodeType":"168","endLine":73,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":82,"column":7,"nodeType":"168","endLine":82,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":10,"column":26,"nodeType":"164","messageId":"165","endLine":10,"endColumn":28},{"ruleId":"155","severity":1,"message":"156","line":8,"column":27,"nodeType":"157","messageId":"158","endLine":8,"endColumn":33},{"ruleId":"155","severity":1,"message":"159","line":8,"column":35,"nodeType":"157","messageId":"158","endLine":8,"endColumn":40},{"ruleId":"155","severity":1,"message":"160","line":8,"column":42,"nodeType":"157","messageId":"158","endLine":8,"endColumn":48},{"ruleId":"155","severity":1,"message":"161","line":8,"column":50,"nodeType":"157","messageId":"158","endLine":8,"endColumn":54},{"ruleId":"162","severity":1,"message":"163","line":121,"column":26,"nodeType":"164","messageId":"165","endLine":121,"endColumn":28},{"ruleId":"162","severity":1,"message":"163","line":126,"column":17,"nodeType":"164","messageId":"165","endLine":126,"endColumn":19},{"ruleId":"155","severity":1,"message":"169","line":156,"column":13,"nodeType":"157","messageId":"158","endLine":156,"endColumn":24},{"ruleId":"166","severity":1,"message":"167","line":176,"column":7,"nodeType":"168","endLine":176,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":181,"column":7,"nodeType":"168","endLine":181,"endColumn":17},{"ruleId":"155","severity":1,"message":"170","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":6,"column":26,"nodeType":"157","messageId":"158","endLine":6,"endColumn":32},{"ruleId":"155","severity":1,"message":"159","line":6,"column":34,"nodeType":"157","messageId":"158","endLine":6,"endColumn":39},{"ruleId":"155","severity":1,"message":"160","line":6,"column":41,"nodeType":"157","messageId":"158","endLine":6,"endColumn":47},{"ruleId":"155","severity":1,"message":"161","line":6,"column":49,"nodeType":"157","messageId":"158","endLine":6,"endColumn":53},{"ruleId":"166","severity":1,"message":"167","line":26,"column":7,"nodeType":"168","endLine":26,"endColumn":17},{"ruleId":"155","severity":1,"message":"171","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":15},{"ruleId":"155","severity":1,"message":"172","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":13},{"ruleId":"155","severity":1,"message":"173","line":10,"column":8,"nodeType":"157","messageId":"158","endLine":10,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":16,"column":27,"nodeType":"157","messageId":"158","endLine":16,"endColumn":33},{"ruleId":"155","severity":1,"message":"159","line":16,"column":35,"nodeType":"157","messageId":"158","endLine":16,"endColumn":40},{"ruleId":"155","severity":1,"message":"160","line":16,"column":42,"nodeType":"157","messageId":"158","endLine":16,"endColumn":48},{"ruleId":"155","severity":1,"message":"161","line":16,"column":50,"nodeType":"157","messageId":"158","endLine":16,"endColumn":54},{"ruleId":"166","severity":1,"message":"167","line":51,"column":9,"nodeType":"168","endLine":51,"endColumn":19},{"ruleId":"166","severity":1,"message":"167","line":57,"column":9,"nodeType":"168","endLine":57,"endColumn":19},{"ruleId":"166","severity":1,"message":"167","line":66,"column":9,"nodeType":"168","endLine":66,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":89,"column":21,"nodeType":"164","messageId":"165","endLine":89,"endColumn":23},{"ruleId":"155","severity":1,"message":"174","line":91,"column":23,"nodeType":"157","messageId":"158","endLine":91,"endColumn":30},{"ruleId":"166","severity":1,"message":"167","line":105,"column":13,"nodeType":"168","endLine":105,"endColumn":23},{"ruleId":"166","severity":1,"message":"167","line":135,"column":13,"nodeType":"168","endLine":135,"endColumn":23},{"ruleId":"166","severity":1,"message":"167","line":136,"column":13,"nodeType":"168","endLine":136,"endColumn":23},{"ruleId":"166","severity":1,"message":"167","line":137,"column":13,"nodeType":"168","endLine":137,"endColumn":23},{"ruleId":"166","severity":1,"message":"167","line":145,"column":13,"nodeType":"168","endLine":145,"endColumn":23},{"ruleId":"166","severity":1,"message":"167","line":146,"column":13,"nodeType":"168","endLine":146,"endColumn":23},{"ruleId":"166","severity":1,"message":"167","line":147,"column":13,"nodeType":"168","endLine":147,"endColumn":23},{"ruleId":"155","severity":1,"message":"156","line":8,"column":27,"nodeType":"157","messageId":"158","endLine":8,"endColumn":33},{"ruleId":"155","severity":1,"message":"159","line":8,"column":35,"nodeType":"157","messageId":"158","endLine":8,"endColumn":40},{"ruleId":"155","severity":1,"message":"160","line":8,"column":42,"nodeType":"157","messageId":"158","endLine":8,"endColumn":48},{"ruleId":"155","severity":1,"message":"161","line":8,"column":50,"nodeType":"157","messageId":"158","endLine":8,"endColumn":54},{"ruleId":"162","severity":1,"message":"163","line":53,"column":31,"nodeType":"164","messageId":"165","endLine":53,"endColumn":33},{"ruleId":"162","severity":1,"message":"163","line":58,"column":21,"nodeType":"164","messageId":"165","endLine":58,"endColumn":23},{"ruleId":"155","severity":1,"message":"175","line":86,"column":19,"nodeType":"157","messageId":"158","endLine":86,"endColumn":26},{"ruleId":"166","severity":1,"message":"167","line":93,"column":13,"nodeType":"168","endLine":93,"endColumn":23},{"ruleId":"155","severity":1,"message":"156","line":4,"column":26,"nodeType":"157","messageId":"158","endLine":4,"endColumn":32},{"ruleId":"155","severity":1,"message":"159","line":4,"column":34,"nodeType":"157","messageId":"158","endLine":4,"endColumn":39},{"ruleId":"155","severity":1,"message":"160","line":4,"column":41,"nodeType":"157","messageId":"158","endLine":4,"endColumn":47},{"ruleId":"155","severity":1,"message":"161","line":4,"column":49,"nodeType":"157","messageId":"158","endLine":4,"endColumn":53},{"ruleId":"166","severity":1,"message":"167","line":24,"column":13,"nodeType":"168","endLine":24,"endColumn":23},{"ruleId":"155","severity":1,"message":"156","line":4,"column":27,"nodeType":"157","messageId":"158","endLine":4,"endColumn":33},{"ruleId":"155","severity":1,"message":"159","line":4,"column":35,"nodeType":"157","messageId":"158","endLine":4,"endColumn":40},{"ruleId":"155","severity":1,"message":"160","line":4,"column":42,"nodeType":"157","messageId":"158","endLine":4,"endColumn":48},{"ruleId":"155","severity":1,"message":"161","line":4,"column":50,"nodeType":"157","messageId":"158","endLine":4,"endColumn":54},{"ruleId":"166","severity":1,"message":"167","line":24,"column":13,"nodeType":"168","endLine":24,"endColumn":23},{"ruleId":"155","severity":1,"message":"156","line":9,"column":27,"nodeType":"157","messageId":"158","endLine":9,"endColumn":33},{"ruleId":"155","severity":1,"message":"159","line":9,"column":35,"nodeType":"157","messageId":"158","endLine":9,"endColumn":40},{"ruleId":"155","severity":1,"message":"160","line":9,"column":42,"nodeType":"157","messageId":"158","endLine":9,"endColumn":48},{"ruleId":"155","severity":1,"message":"161","line":9,"column":50,"nodeType":"157","messageId":"158","endLine":9,"endColumn":54},{"ruleId":"162","severity":1,"message":"163","line":87,"column":31,"nodeType":"164","messageId":"165","endLine":87,"endColumn":33},{"ruleId":"162","severity":1,"message":"163","line":92,"column":21,"nodeType":"164","messageId":"165","endLine":92,"endColumn":23},{"ruleId":"155","severity":1,"message":"175","line":120,"column":19,"nodeType":"157","messageId":"158","endLine":120,"endColumn":26},{"ruleId":"166","severity":1,"message":"167","line":131,"column":13,"nodeType":"168","endLine":131,"endColumn":23},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'newResponse' is assigned a value but never used.","'LandPage' is defined but never used.","'Amplify' is defined but never used.","'API' is defined but never used.","'CreatePage' is defined but never used.","'mutData' is assigned a value but never used.","'newGame' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]