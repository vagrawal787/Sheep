[{"/Users/varun/Documents/Developer/sheep/src/index.js":"1","/Users/varun/Documents/Developer/sheep/src/reportWebVitals.js":"2","/Users/varun/Documents/Developer/sheep/src/App.js":"3","/Users/varun/Documents/Developer/sheep/src/containers/LandingFormContainer.jsx":"4","/Users/varun/Documents/Developer/sheep/src/components/Input.jsx":"5","/Users/varun/Documents/Developer/sheep/src/components/Button.jsx":"6","/Users/varun/Documents/Developer/sheep/src/pages/landingForm.jsx":"7","/Users/varun/Documents/Developer/sheep/src/pages/userForm.jsx":"8","/Users/varun/Documents/Developer/sheep/src/pages/404.jsx":"9","/Users/varun/Documents/Developer/sheep/src/graphql/queries.js":"10","/Users/varun/Documents/Developer/sheep/src/aws-exports.js":"11","/Users/varun/Documents/Developer/sheep/src/pages/thankPage.jsx":"12","/Users/varun/Documents/Developer/sheep/src/graphql/mutations.js":"13","/Users/varun/Documents/Developer/sheep/src/pages/adminConsole.jsx":"14","/Users/varun/Documents/Developer/sheep/src/pages/formCreator.jsx":"15","/Users/varun/Documents/Developer/sheep/src/pages/thankYouForm.jsx":"16","/Users/varun/Documents/Developer/sheep/src/pages/responseManager.jsx":"17"},{"size":500,"mtime":1607329823099,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1607329823100,"results":"20","hashOfConfig":"19"},{"size":1777,"mtime":1609217711584,"results":"21","hashOfConfig":"19"},{"size":2171,"mtime":1609218977972,"results":"22","hashOfConfig":"19"},{"size":492,"mtime":1609218948634,"results":"23","hashOfConfig":"19"},{"size":314,"mtime":1609218216677,"results":"24","hashOfConfig":"19"},{"size":387,"mtime":1609117940608,"results":"25","hashOfConfig":"19"},{"size":7602,"mtime":1609217776342,"results":"26","hashOfConfig":"19"},{"size":178,"mtime":1607496802031,"results":"27","hashOfConfig":"19"},{"size":2518,"mtime":1609049332026,"results":"28","hashOfConfig":"19"},{"size":734,"mtime":1609049334476,"results":"29","hashOfConfig":"19"},{"size":1014,"mtime":1609118361630,"results":"30","hashOfConfig":"19"},{"size":4276,"mtime":1609049332142,"results":"31","hashOfConfig":"19"},{"size":5933,"mtime":1609218811593,"results":"32","hashOfConfig":"19"},{"size":6570,"mtime":1609217747019,"results":"33","hashOfConfig":"19"},{"size":1214,"mtime":1609217755872,"results":"34","hashOfConfig":"19"},{"size":429,"mtime":1609217792646,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1f11qpv",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"/Users/varun/Documents/Developer/sheep/src/index.js",[],["79","80"],"/Users/varun/Documents/Developer/sheep/src/reportWebVitals.js",[],"/Users/varun/Documents/Developer/sheep/src/App.js",[],"/Users/varun/Documents/Developer/sheep/src/containers/LandingFormContainer.jsx",["81","82"],"import React, { Component } from 'react';\n\n/* Import Components */\nimport Input from '../components/Input';\nimport Button from '../components/Button';\n\nimport { BrowserRouter as Redirect } from 'react-router-dom';\n\nclass LandingFormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: '',\n      redirectSubmit: false,\n      redirectAdmin: false,\n\n    }\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleAdminButton = this.handleAdminButton.bind(this);\n  }\n\n  /* This lifecycle hook gets executed when the component mounts */\n\n  handleInput(e) {\n    let value = e.target.value;\n    this.setState({ code: value });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    this.setState({ redirectSubmit: true });\n  }\n  handleAdminButton(e) {\n    e.preventDefault();\n    this.setState({ redirectAdmin: true });\n  }\n\n  render() {\n    if (this.state.redirectSubmit) {\n      console.log(\"call mainpage\");\n      console.log(this.state.code)\n      this.state.redirectSubmit = false;\n      return <Redirect to={{\n        pathname: \"/userForm\",\n        state: { code: this.state.code, error: false }\n      }} />\n    }\n    if (this.state.redirectAdmin) {\n      console.log(\"call admin\");\n      this.state.redirectAdmin = false;\n      return <Redirect to = {{pathname: \"/adminConsole\"}} />\n    }\n    return (\n      <div>\n        <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n\n          <Input inputType={'number'}\n            title={'Code:'}\n            name={'code'}\n            value={this.state.code}\n            placeholder={'Enter your code'}\n            handleChange={this.handleInput}\n\n          /> {/* Code */}\n\n          <Button\n            action={this.handleFormSubmit}\n            type={'primary'}\n            title={'Submit'}\n          /> { /*Submit */}\n\n\n        </form>\n        <Button\n          action={this.handleAdminButton}\n          type={'primary'}\n          title={'Go To Admin'}\n        /> { /* Admin */}\n\n        <p> {this.state.message} </p>\n      </div>\n\n\n    );\n  }\n}\n\nexport default LandingFormContainer;","/Users/varun/Documents/Developer/sheep/src/components/Input.jsx",[],"/Users/varun/Documents/Developer/sheep/src/components/Button.jsx",["83"],"import React from 'react';\n\n\nconst Button = (props) => {\n\tconsole.log(props.style);\n\treturn (\n\t\t<button\n\t\t\tname={props.label}\n\t\t\tstyle={props.style}\n\t\t\tclassName={props.type == 'primary' ? 'btn btn-primary' : 'btn btn-secondary'}\n\t\t\tonClick={props.action} >\n\t\t\t{props.title}\n\t\t</button>)\n}\n\n\nexport default Button;","/Users/varun/Documents/Developer/sheep/src/pages/landingForm.jsx",[],"/Users/varun/Documents/Developer/sheep/src/pages/userForm.jsx",["84","85","86","87","88","89","90"],"import React, { Component } from 'react';\n\nimport Input from '../components/Input';\nimport Button from '../components/Button';\n\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom';\n\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport awsconfig from '../aws-exports';\nimport gql from 'graphql-tag';\n\nimport * as queries from '../graphql/queries';\nimport * as mutations from '../graphql/mutations';\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fname: '',\n      lname: '',\n      email: '',\n      q1: '',\n      q2: '',\n      q3: '',\n      q4: '',\n      q5: '',\n      q6: '',\n      q7: '',\n      q8: '',\n      q9: '',\n      q10: '',\n      r1: '',\n      r2: '',\n      r3: '',\n      r4: '',\n      r5: '',\n      r6: '',\n      r7: '',\n      r8: '',\n      r9: '',\n      r10: '',\n      redirect: false,\n      error: false,\n      call: false,\n    }\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleError = this.handleError.bind(this);\n    // this.setMessage = this.setMessage.bind(this);\n  }\n\n  async findForm() {\n    console.log(\"hi\");\n\n    console.log(this.props.location.state.code);\n    const client = new AWSAppSyncClient({\n      url: awsconfig.aws_appsync_graphqlEndpoint,\n      region: awsconfig.aws_appsync_region,\n      disableOffline: true,\n      auth: {\n        type: AUTH_TYPE.API_KEY,\n        apiKey: awsconfig.aws_appsync_apiKey,\n      },\n    });\n    const apiData = await client.query({ query: gql(queries.getForm), variables: { id: this.props.location.state.code } });\n    if (apiData.data.getForm == null) {\n      this.state.call = true;\n      (() => { this.handleError(); })();\n    }\n    else {\n      this.setState({\n        q1: apiData.data.getForm.q1,\n        q2: apiData.data.getForm.q2,\n        q3: apiData.data.getForm.q3,\n        q4: apiData.data.getForm.q4,\n        q5: apiData.data.getForm.q5,\n        q6: apiData.data.getForm.q6,\n        q7: apiData.data.getForm.q7,\n        q8: apiData.data.getForm.q8,\n        q9: apiData.data.getForm.q9,\n        q10: apiData.data.getForm.q10\n      });\n      this.state.call = true;\n    }\n  }\n\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState({ [name]: value });\n  }\n\n  async handleFormSubmit(e) {\n    e.preventDefault();\n    const createRes = {\n      form_id: this.props.location.state.code,\n      fname: this.state.fname,\n      lname: this.state.lname,\n      email: this.state.email,\n      r1: this.state.r1,\n      r2: this.state.r2,\n      r3: this.state.r3,\n      r4: this.state.r4,\n      r5: this.state.r5,\n      r6: this.state.r6,\n      r7: this.state.r7,\n      r8: this.state.r8,\n      r9: this.state.r9,\n      r10: this.state.r10,\n    }\n    const client = new AWSAppSyncClient({\n      url: awsconfig.aws_appsync_graphqlEndpoint,\n      region: awsconfig.aws_appsync_region,\n      disableOffline: true,\n      auth: {\n        type: AUTH_TYPE.API_KEY,\n        apiKey: awsconfig.aws_appsync_apiKey,\n      },\n    });\n    const newResponse = await client.mutate({ mutation: gql(mutations.createResponse), variables: { input: createRes } });\n    this.setState({ redirect: true });\n  }\n\n  handleError() {\n    console.log('error reached');\n    this.setState({ error: true });\n  }\n  // setMessage() {\n  //   this.props.message = '';\n  // }\n\n\n  render() {\n    if (!this.state.call) {\n      (async () => { await this.findForm(); })();\n    }\n    if (this.state.redirect) {\n      console.log(\"call thank you page\");\n      this.state.redirect = false;\n      return <Redirect to={{ pathname: \"/thankYou\" }} />\n    }\n    if (this.state.error) {\n      console.log(\"recall landing page\");\n      this.state.error = false;\n      return <Redirect to={{\n        pathname: \"/\",\n        state: { message: \"Oops... the code you entered isn't valid. Try another one :)\" }\n      }} />\n    }\n    // (() => { this.setMessage(); })();\n    return (\n      <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n\n        <Input inputType={'text'}\n          title={'First Name:'}\n          name={'fname'}\n          value={this.state.fname}\n          placeholder={'First name'}\n          handleChange={this.handleInput}\n\n        /> {/* First name */}\n\n        <Input inputType={'text'}\n          title={'Last Name:'}\n          name={'lname'}\n          value={this.state.lname}\n          placeholder={'Last Name'}\n          handleChange={this.handleInput}\n\n        /> {/* Last name */}\n\n        <Input inputType={'text'}\n          title={'Email:'}\n          name={'email'}\n          value={this.state.email}\n          placeholder={'Email'}\n          handleChange={this.handleInput}\n\n        /> {/* email */}\n\n        <p>{this.state.q1}</p>\n\n        <Input inputType={'text'}\n          title={'Question 1:'}\n          name={'r1'}\n          value={this.state.r1}\n          placeholder={'Response 1'}\n          handleChange={this.handleInput}\n\n        /> {/* Question 1 */}\n\n        <p>{this.state.q2}</p>\n\n        <Input inputType={'text'}\n          title={'Question 2:'}\n          name={'r2'}\n          value={this.state.r2}\n          placeholder={'Response 2'}\n          handleChange={this.handleInput}\n\n        /> {/* Question 2 */}\n\n        <p>{this.state.q3}</p>\n        <Input inputType={'text'}\n          title={'Question 3:'}\n          name={'r3'}\n          value={this.state.r3}\n          placeholder={'Response 3'}\n          handleChange={this.handleInput}\n\n        /> {/* Question 3 */}\n\n        <p>{this.state.q4}</p>\n        <Input inputType={'text'}\n          title={'Question 4:'}\n          name={'r4'}\n          value={this.state.r4}\n          placeholder={'Response 4'}\n          handleChange={this.handleInput}\n\n        /> {/* Question 4 */}\n\n\n        <p>{this.state.q5}</p>\n        <Input inputType={'text'}\n          title={'Question 5:'}\n          name={'r5'}\n          value={this.state.r5}\n          placeholder={'Response 5'}\n          handleChange={this.handleInput}\n\n        /> {/* Question 5 */}\n\n        <p>{this.state.q6}</p>\n        <Input inputType={'text'}\n          title={'Question 6:'}\n          name={'r6'}\n          value={this.state.r6}\n          placeholder={'Response 6'}\n          handleChange={this.handleInput}\n\n        /> {/* Question 6 */}\n\n        <p>{this.state.q7}</p>\n        <Input inputType={'text'}\n          title={'Question 7:'}\n          name={'r7'}\n          value={this.state.r7}\n          placeholder={'Response 7'}\n          handleChange={this.handleInput}\n\n        /> {/* Question 7 */}\n\n        <p>{this.state.q8}</p>\n        <Input inputType={'text'}\n          title={'Question 8:'}\n          name={'r8'}\n          value={this.state.r8}\n          placeholder={'Response 8'}\n          handleChange={this.handleInput}\n\n        /> {/* Question 8 */}\n\n        <p>{this.state.q9}</p>\n        <Input inputType={'text'}\n          title={'Question 9:'}\n          name={'r9'}\n          value={this.state.r9}\n          placeholder={'Response 9'}\n          handleChange={this.handleInput}\n\n        /> {/* Question 9 */}\n\n        <p>{this.state.q10}</p>\n        <Input inputType={'text'}\n          title={'Question 10:'}\n          name={'r10'}\n          value={this.state.r10}\n          placeholder={'Response 10'}\n          handleChange={this.handleInput}\n\n        /> {/* Question 10 */}\n\n        <Button\n          action={this.handleFormSubmit}\n          type={'primary'}\n          title={'Submit'}\n        /> { /*Submit */}\n\n\n      </form>\n    );\n  }\n}\n\nexport default MainPage;","/Users/varun/Documents/Developer/sheep/src/pages/404.jsx",[],"/Users/varun/Documents/Developer/sheep/src/graphql/queries.js",[],"/Users/varun/Documents/Developer/sheep/src/aws-exports.js",[],"/Users/varun/Documents/Developer/sheep/src/pages/thankPage.jsx",["91","92","93","94","95","96"],"import React, { Component } from 'react';\nimport LandPage from '../pages/landingForm';\nimport Button from '../components/Button';\n\nimport {BrowserRouter as Router, Route, Switch, Link, Redirect} from 'react-router-dom';\n\nclass ThankPage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n    }\n    this.handleButtonPress = this.handleButtonPress.bind(this);\n  }\n\n\n  handleButtonPress(e) {\n    e.preventDefault();\n    this.setState({ redirect: true });\n  }\n\n  render() {\n    if (this.state.redirect){\n      this.state.redirect = false;\n      return <Redirect to = {{pathname: \"/\" }}/>\n  }\n    return (\n      <div>\n        <h1>\n          Thanks for playing!\n            </h1>\n        <h3>\n          Be sure to check back at the end of the week for results.\n            </h3>\n        <Button\n          action={this.handleButtonPress}\n          type={'primary'}\n          title={'Return to Home Page'}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ThankPage;","/Users/varun/Documents/Developer/sheep/src/graphql/mutations.js",[],"/Users/varun/Documents/Developer/sheep/src/pages/adminConsole.jsx",["97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React, { Component } from 'react';\nimport Button from '../components/Button';\nimport Amplify, { Auth } from 'aws-amplify';\nimport awsconfig from '../aws-exports';\n\nimport { API } from 'aws-amplify';\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport gql from 'graphql-tag';\n\nimport CreatePage from '../pages/formCreator';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\n\nimport * as queries from '../graphql/queries';\nimport * as mutations from '../graphql/mutations';\n\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom';\n\n\nclass ConsolePage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userID: '',\n            message: '',\n            call: false,\n            refresh: this.props.refresh,\n            redirect: false,\n            apicall: false,\n            forms: [],\n            buttons: [],\n            rendering: false,\n            redirectToManager: false,\n            formToRedirect: '',\n        }\n        this.handleButtonPress = this.handleButtonPress.bind(this);\n        this.handleManagerPress = this.handleManagerPress.bind(this);\n        this.setMessage = this.setMessage.bind(this);\n        this.getUserID = this.getUserID.bind(this);\n        this.refreshState = this.refreshState.bind(this);\n        this.setButtons = this.setButtons.bind(this);\n    }\n\n    handleButtonPress(e) {\n        e.preventDefault();\n        this.setState({ redirect: true });\n    }\n\n    handleManagerPress(e) {\n        e.preventDefault();\n        let name = e.target.name;\n        console.log(name);\n        this.state.formToRedirect = name;\n        this.setState({ redirectToManager: true });\n    }\n\n\n    setMessage() {\n        this.state.message = '';\n    }\n\n    /* Retrieves the current userID. \n    Fetches their forms from the API. \n    Changes button state so that user can select which of their forms to manage.*/\n    async getUserID() {\n        const user = await Auth.currentUserInfo();\n        console.log(user.username);\n        this.state.call = true;\n        this.setState({ userID: user.username });\n        const client = new AWSAppSyncClient({\n            url: awsconfig.aws_appsync_graphqlEndpoint,\n            region: awsconfig.aws_appsync_region,\n            disableOffline: true,\n            auth: {\n                type: AUTH_TYPE.API_KEY,\n                apiKey: awsconfig.aws_appsync_apiKey,\n            },\n        });\n        console.log(\"fetching api data\");\n        let apiData = '';\n        try {\n            apiData = await client.query({\n                query: gql(queries.getUsers),\n                variables: { id: this.state.userID }\n            });\n            console.log(\"api data fetched\");\n            console.log(apiData);\n        } catch (e) {\n            console.log(e);\n        }\n        if (apiData == '' || apiData.data.getUsers == null) {\n            try {\n                const mutData = await client.mutate({\n                    mutation: gql(mutations.createUsers),\n                    variables: { input: { id: this.state.userID } }\n                });\n            } catch (e) {\n                console.log(e);\n            }\n            console.log('normal retrieval');\n        } else {\n            var dict = apiData.data.getUsers.forms.items;\n            var arr = [];\n            for (var key in dict) {\n                arr.push((dict[key]).id);\n            }\n            this.state.forms = arr;\n            console.log(this.state.forms);\n        }\n        (() => { this.setButtons(); })();\n        this.setState({ apicall: true });\n    }\n\n    setButtons() {\n        var arr = [];\n        for (var p in this.state.forms) {\n            var button = <Button\n                action={this.handleManagerPress}\n                type={'primary'}\n                label={this.state.forms[p]}\n                title={this.state.forms[p]}\n            />\n            arr.push(button);\n        }\n        this.state.rendering = true;\n        console.log(arr);\n        this.setState({ buttons: arr });\n    }\n\n    refreshState() {\n        this.setState({ refresh: false });\n    }\n    render() {\n        if (this.props.refresh == true) {\n            (() => { this.refreshState(); })();\n        }\n        if (!this.state.call) {\n            console.log(\"calling admin api\");\n            (async () => { this.getUserID(); })();\n        }\n        // if (!this.state.rendering){\n        //     (() => { this.setButtons(); })();\n        // }\n        if (this.state.redirect) {\n            this.state.redirect = false;\n            this.state.refresh = false;\n            this.state.call = false;\n            this.state.apicall = false;\n            this.state.rendering = false;\n            this.state.redirectToManager = false;\n            console.log(\"redirecting from admin\");\n            return <Redirect to={{\n                pathname: \"/createForm\",\n                state: { userID: this.state.userID }\n            }} />\n        }\n        if (this.state.redirectToManager) {\n            this.state.redirect = false;\n            this.state.refresh = false;\n            this.state.call = false;\n            this.state.apicall = false;\n            this.state.rendering = false;\n            this.state.redirectToManager = false;\n            console.log(\"redirecting to responses\");\n            return <Redirect to={{\n                pathname: \"/responseManager\",\n                state: { formID: this.state.formToRedirect }\n            }} />\n        }\n        return (\n            <div>\n                <AmplifySignOut />\n                <h1> Welcome to Admin Console! </h1>\n                {this.state.buttons}\n                <Button\n                    action={this.handleButtonPress}\n                    type={'primary'}\n                    title={'Create Game'}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withAuthenticator(ConsolePage);","/Users/varun/Documents/Developer/sheep/src/pages/formCreator.jsx",["124","125"],"import React, { Component } from 'react';\n\nimport * as mutations from '../graphql/mutations';\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport awsconfig from '../aws-exports';\nimport gql from 'graphql-tag';\n\nimport {BrowserRouter as  Redirect} from 'react-router-dom';\n\nimport Input from '../components/Input';\nimport Button from '../components/Button';\n\n\nclass CreatePage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userID: this.props.location.state.userID,\n            id: '',\n            q1: '',\n            q2: '',\n            q3: '',\n            q4: '',\n            q5: '',\n            q6: '',\n            q7: '',\n            q8: '',\n            q9: '',\n            q10: '',\n            redirect: false,\n        }\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleInput(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState({ [name]: value });\n    }\n\n    async handleFormSubmit(e) {\n        e.preventDefault();\n        const createF = {\n            id: this.state.id,\n            formUserId: this.state.userID,\n            userID: this.state.userID,\n            q1: this.state.q1,\n            q2: this.state.q2,\n            q3: this.state.q3,\n            q4: this.state.q4,\n            q5: this.state.q5,\n            q6: this.state.q6,\n            q7: this.state.q7,\n            q8: this.state.q8,\n            q9: this.state.q9,\n            q10: this.state.q10,\n        }\n        const client = new AWSAppSyncClient({\n            url: awsconfig.aws_appsync_graphqlEndpoint,\n            region: awsconfig.aws_appsync_region,\n            disableOffline: true,\n            auth: {\n                type: AUTH_TYPE.API_KEY,\n                apiKey: awsconfig.aws_appsync_apiKey,\n            },\n        });\n        const newGame = await client.mutate({ mutation: gql(mutations.createForm), variables: { input: createF } });\n        this.setState({ redirect: true });\n    }\n\n    render() {\n        if (this.state.redirect) {\n            this.state.redirect = false;\n            return <Redirect to={{\n                pathname: \"/formCreated\",\n                state: { code: this.state.id }\n            }} />\n        }\n        return (\n            <div>\n                <h1> Create a Game! </h1>\n                <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n\n                    {/* <Input inputType={'text'}\n          title={'Name:'}\n          name={'fname'}\n          value={this.state.fname}\n          placeholder={'First name'}\n          handleChange={this.handleInput}\n\n        />  */}\n\n\n                    <Input inputType={'number'}\n                        title={'ID:'}\n                        name={'id'}\n                        value={this.state.id}\n                        placeholder={'ID'}\n                        handleChange={this.handleInput}\n\n                    /> {/* id */}\n\n                    <Input inputType={'text'}\n                        title={'Question 1:'}\n                        name={'q1'}\n                        value={this.state.q1}\n                        placeholder={'Question 1'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 1 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 2:'}\n                        name={'q2'}\n                        value={this.state.q2}\n                        placeholder={'Question 2'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 2 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 3:'}\n                        name={'q3'}\n                        value={this.state.q3}\n                        placeholder={'Question 3'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 3 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 4:'}\n                        name={'q4'}\n                        value={this.state.q4}\n                        placeholder={'Question 4'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 4 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 5:'}\n                        name={'q5'}\n                        value={this.state.q5}\n                        placeholder={'Question 5'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 5 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 6:'}\n                        name={'q6'}\n                        value={this.state.q6}\n                        placeholder={'Question 6'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 6 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 7:'}\n                        name={'q7'}\n                        value={this.state.q7}\n                        placeholder={'Question 7'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 7 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 8:'}\n                        name={'q8'}\n                        value={this.state.q8}\n                        placeholder={'Question 8'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 8 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 9:'}\n                        name={'q9'}\n                        value={this.state.q9}\n                        placeholder={'Question 9'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 9 */}\n\n                    <Input inputType={'text'}\n                        title={'Question 10:'}\n                        name={'q10'}\n                        value={this.state.q10}\n                        placeholder={'Question 10'}\n                        handleChange={this.handleInput}\n\n                    /> {/* Question 10 */}\n\n                    <Button\n                        action={this.handleFormSubmit}\n                        type={'primary'}\n                        title={'Submit'}\n                    /> { /*Submit */}\n\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default CreatePage;","/Users/varun/Documents/Developer/sheep/src/pages/thankYouForm.jsx",["126"],"import React, { Component } from 'react';\nimport Button from '../components/Button';\n\nimport {BrowserRouter as Redirect} from 'react-router-dom';\n\nclass ThankFormCreate extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n        }\n        this.handleButtonPress = this.handleButtonPress.bind(this);\n    }\n\n    handleButtonPress(e) {\n        e.preventDefault();\n        console.log(\"button pressed\");\n        this.setState({ redirect: true });\n    }\n\n    render() {\n        if (this.state.redirect) {\n            this.state.redirect = false;\n            return <Redirect to={{\n                pathname: \"/adminConsole\",\n                state: { refresh: true }\n            }} />\n        }\n        return (\n            <div>\n                <h1>\n                    Thanks for creating a form! Be sure to send this code to your players: {this.props.location.state.code}\n                </h1>\n                <Button\n                    action={this.handleButtonPress}\n                    type={'primary'}\n                    title={'Return to Admin Console'}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ThankFormCreate;","/Users/varun/Documents/Developer/sheep/src/pages/responseManager.jsx",["127","128"],"import React, { Component } from 'react';\nimport Button from '../components/Button';\n\nimport {BrowserRouter as Redirect} from 'react-router-dom';\n\nclass ResponseManager extends Component {\n\n    render() {\n\n        return (\n            <div>\n                <h1>\n                    Responses for form: {this.props.location.state.formID}\n                </h1>\n            </div>\n        );\n    }\n}\n\nexport default ResponseManager;",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":44,"column":7,"nodeType":"135","endLine":44,"endColumn":17},{"ruleId":"133","severity":1,"message":"134","line":52,"column":7,"nodeType":"135","endLine":52,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":10,"column":26,"nodeType":"138","messageId":"139","endLine":10,"endColumn":28},{"ruleId":"140","severity":1,"message":"141","line":6,"column":27,"nodeType":"142","messageId":"143","endLine":6,"endColumn":33},{"ruleId":"140","severity":1,"message":"144","line":6,"column":35,"nodeType":"142","messageId":"143","endLine":6,"endColumn":40},{"ruleId":"140","severity":1,"message":"145","line":6,"column":42,"nodeType":"142","messageId":"143","endLine":6,"endColumn":48},{"ruleId":"140","severity":1,"message":"146","line":6,"column":50,"nodeType":"142","messageId":"143","endLine":6,"endColumn":54},{"ruleId":"140","severity":1,"message":"147","line":121,"column":11,"nodeType":"142","messageId":"143","endLine":121,"endColumn":22},{"ruleId":"133","severity":1,"message":"134","line":140,"column":7,"nodeType":"135","endLine":140,"endColumn":17},{"ruleId":"133","severity":1,"message":"134","line":145,"column":7,"nodeType":"135","endLine":145,"endColumn":17},{"ruleId":"140","severity":1,"message":"148","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":5,"column":26,"nodeType":"142","messageId":"143","endLine":5,"endColumn":32},{"ruleId":"140","severity":1,"message":"144","line":5,"column":34,"nodeType":"142","messageId":"143","endLine":5,"endColumn":39},{"ruleId":"140","severity":1,"message":"145","line":5,"column":41,"nodeType":"142","messageId":"143","endLine":5,"endColumn":47},{"ruleId":"140","severity":1,"message":"146","line":5,"column":49,"nodeType":"142","messageId":"143","endLine":5,"endColumn":53},{"ruleId":"133","severity":1,"message":"134","line":25,"column":7,"nodeType":"135","endLine":25,"endColumn":17},{"ruleId":"140","severity":1,"message":"149","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":15},{"ruleId":"140","severity":1,"message":"150","line":6,"column":10,"nodeType":"142","messageId":"143","endLine":6,"endColumn":13},{"ruleId":"140","severity":1,"message":"151","line":10,"column":8,"nodeType":"142","messageId":"143","endLine":10,"endColumn":18},{"ruleId":"140","severity":1,"message":"141","line":16,"column":27,"nodeType":"142","messageId":"143","endLine":16,"endColumn":33},{"ruleId":"140","severity":1,"message":"144","line":16,"column":35,"nodeType":"142","messageId":"143","endLine":16,"endColumn":40},{"ruleId":"140","severity":1,"message":"145","line":16,"column":42,"nodeType":"142","messageId":"143","endLine":16,"endColumn":48},{"ruleId":"140","severity":1,"message":"146","line":16,"column":50,"nodeType":"142","messageId":"143","endLine":16,"endColumn":54},{"ruleId":"133","severity":1,"message":"134","line":53,"column":9,"nodeType":"135","endLine":53,"endColumn":19},{"ruleId":"133","severity":1,"message":"134","line":59,"column":9,"nodeType":"135","endLine":59,"endColumn":19},{"ruleId":"133","severity":1,"message":"134","line":68,"column":9,"nodeType":"135","endLine":68,"endColumn":19},{"ruleId":"136","severity":1,"message":"137","line":91,"column":21,"nodeType":"138","messageId":"139","endLine":91,"endColumn":23},{"ruleId":"140","severity":1,"message":"152","line":93,"column":23,"nodeType":"142","messageId":"143","endLine":93,"endColumn":30},{"ruleId":"133","severity":1,"message":"134","line":107,"column":13,"nodeType":"135","endLine":107,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":125,"column":9,"nodeType":"135","endLine":125,"endColumn":19},{"ruleId":"136","severity":1,"message":"137","line":134,"column":32,"nodeType":"138","messageId":"139","endLine":134,"endColumn":34},{"ruleId":"133","severity":1,"message":"134","line":145,"column":13,"nodeType":"135","endLine":145,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":146,"column":13,"nodeType":"135","endLine":146,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":147,"column":13,"nodeType":"135","endLine":147,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":148,"column":13,"nodeType":"135","endLine":148,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":149,"column":13,"nodeType":"135","endLine":149,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":150,"column":13,"nodeType":"135","endLine":150,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":158,"column":13,"nodeType":"135","endLine":158,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":159,"column":13,"nodeType":"135","endLine":159,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":160,"column":13,"nodeType":"135","endLine":160,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":161,"column":13,"nodeType":"135","endLine":161,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":162,"column":13,"nodeType":"135","endLine":162,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":163,"column":13,"nodeType":"135","endLine":163,"endColumn":23},{"ruleId":"140","severity":1,"message":"153","line":69,"column":15,"nodeType":"142","messageId":"143","endLine":69,"endColumn":22},{"ruleId":"133","severity":1,"message":"134","line":75,"column":13,"nodeType":"135","endLine":75,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":24,"column":13,"nodeType":"135","endLine":24,"endColumn":23},{"ruleId":"140","severity":1,"message":"154","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"155","line":4,"column":26,"nodeType":"142","messageId":"143","endLine":4,"endColumn":34},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'newResponse' is assigned a value but never used.","'LandPage' is defined but never used.","'Amplify' is defined but never used.","'API' is defined but never used.","'CreatePage' is defined but never used.","'mutData' is assigned a value but never used.","'newGame' is assigned a value but never used.","'Button' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]